/* eslint-disable */
/**
 * Generated data model types.
 *
 * THIS CODE IS AUTOMATICALLY GENERATED.
 *
 * Generated by convex@1.10.0.
 * To regenerate, run `npx convex dev`.
 * @module
 */

import type { DataModelFromSchemaDefinition } from "convex/server";
import type { DocumentByName, TableNamesInDataModel } from "convex/server";
import type { GenericId } from "convex/values";
import schema from "../schema";

/**
 * The names of all of the tables in the database.
 */
export type TableNames = TableNamesInDataModel<DataModel>;

/**
 * The type of the document stored in the `categories` table.
 */
export type Categories = DocumentByName<DataModel, "categories">;

/**
 * The ID type for the `categories` table.
 */
export type CategoriesId = GenericId<"categories">;

/**
 * The type of the document stored in the `escrowTransactions` table.
 */
export type EscrowTransactions = DocumentByName<DataModel, "escrowTransactions">;

/**
 * The ID type for the `escrowTransactions` table.
 */
export type EscrowTransactionsId = GenericId<"escrowTransactions">;

/**
 * The type of the document stored in the `messages` table.
 */
export type Messages = DocumentByName<DataModel, "messages">;

/**
 * The ID type for the `messages` table.
 */
export type MessagesId = GenericId<"messages">;

/**
 * The type of the document stored in the `notifications` table.
 */
export type Notifications = DocumentByName<DataModel, "notifications">;

/**
 * The ID type for the `notifications` table.
 */
export type NotificationsId = GenericId<"notifications">;

/**
 * The type of the document stored in the `profiles` table.
 */
export type Profiles = DocumentByName<DataModel, "profiles">;

/**
 * The ID type for the `profiles` table.
 */
export type ProfilesId = GenericId<"profiles">;

/**
 * The type of the document stored in the `projects` table.
 */
export type Projects = DocumentByName<DataModel, "projects">;

/**
 * The ID type for the `projects` table.
 */
export type ProjectsId = GenericId<"projects">;

/**
 * The type of the document stored in the `proposals` table.
 */
export type Proposals = DocumentByName<DataModel, "proposals">;

/**
 * The ID type for the `proposals` table.
 */
export type ProposalsId = GenericId<"proposals">;

/**
 * The type of the document stored in the `reviews` table.
 */
export type Reviews = DocumentByName<DataModel, "reviews">;

/**
 * The ID type for the `reviews` table.
 */
export type ReviewsId = GenericId<"reviews">;

/**
 * The type of the document stored in the `skills` table.
 */
export type Skills = DocumentByName<DataModel, "skills">;

/**
 * The ID type for the `skills` table.
 */
export type SkillsId = GenericId<"skills">;

/**
 * The type of the document stored in the `users` table.
 */
export type Users = DocumentByName<DataModel, "users">;

/**
 * The ID type for the `users` table.
 */
export type UsersId = GenericId<"users">;

/**
 * The data model type.
 */
export type DataModel = DataModelFromSchemaDefinition<typeof schema>;
